/*******************************************************************************
 *
 * FILE NAME: datetimecalc.cpp
 *
 * DESCRIPTION:
 *  Code for time and data calculation class.
 *  This code was generated by qmake.
 *
 * AUTHOR: James P. Parziale
 *
 * DATE CREATED: 02/16/2009
 *
 * This file may be distributed under the terms of the GNU Public License.
 *
 *******************************************************************************
 * HISTORY:
 * 00 02/16/2009
 *   Original version
 ******************************************************************************/

#include "datetimecalc.h"
#include "Time.hpp"
#include "zDate.hpp"
#include "about.h"

#include <iostream>
using namespace std;

//******************************************************************************

DateTimeCalc::DateTimeCalc(QWidget *parent) :
  QMainWindow(parent)
{
  ui.setupUi(this);

  // Set the base time and date fields to the current time and date.
  ui.baseTimeEdit->setTime(QTime::currentTime());
  ui.baseDateEdit->setDate(QDate::currentDate());
  ui.resultDateEdit->setDate(QDate::currentDate());

  ui.baseDateDiffEdit->setDate(QDate::currentDate());
  ui.targetDateDiffEdit->setDate(QDate::currentDate());

  // Initialize operations
  timeOp = GetTimeOp();
  dateOp = GetDateOp();

  // Initialize time result
  timeResult = QTime::currentTime();
  SetTimeResultText();
}

DateTimeCalc::~DateTimeCalc()
{
}

//******************************************************************************

void DateTimeCalc::on_aboutButton_clicked()
{
  About about_dialog(this);
  about_dialog.exec();
}

void DateTimeCalc::on_actionAbout_triggered()
{
  About about_dialog(this);
  about_dialog.exec();
}

//******************************************************************************

DateTimeCalc::TimeDateOp DateTimeCalc::GetTimeOp()
{
  TimeDateOp ret;
  if (ui.timePlusRadioButton->isChecked()) {
    ret = Add;
  } else if (ui.timeMinusRadioButton->isChecked()) {
    ret = Subtract;
  } else {
    ret = Invalid;
  }
  return ret;
}

DateTimeCalc::TimeDateOp DateTimeCalc::GetDateOp()
{
  TimeDateOp ret;
  if (ui.datePlusRadioButton->isChecked()) {
    ret = Add;
  } else if (ui.dateMinusRadioButton->isChecked()) {
    ret = Subtract;
  } else {
    ret = Invalid;
  }
  return ret;
}

void DateTimeCalc::SetTimeResultText()
{
  ui.resultTimeEdit->setText(timeResult.toString(Qt::TextDate));
}

//******************************************************************************

void DateTimeCalc::on_timeNowButton_clicked()
{
  ui.baseTimeEdit->setTime(QTime::currentTime());
}

void DateTimeCalc::on_timeOffsetNowButton_clicked()
{
  ui.offsetTimeEdit->setTime(QTime::currentTime());
}


void DateTimeCalc::on_timePlusRadioButton_clicked()
{
  timeOp = Add;
}

void DateTimeCalc::on_timeMinusRadioButton_clicked()
{
  timeOp = Subtract;
}

//******************************************************************************

void DateTimeCalc::on_dateTodayButton_clicked()
{
  ui.baseDateEdit->setDate(QDate::currentDate());
}

void DateTimeCalc::on_datePlusRadioButton_clicked()
{
  dateOp = Add;
}

void DateTimeCalc::on_dateMinusRadioButton_clicked()
{
  dateOp = Subtract;
}

//******************************************************************************

void DateTimeCalc::on_dateRefTodayButton_clicked()
{
  ui.baseDateDiffEdit->setDate(QDate::currentDate());
}

void DateTimeCalc::on_dateTargetTodayButton_clicked()
{
  ui.targetDateDiffEdit->setDate(QDate::currentDate());
}

//******************************************************************************

void DateTimeCalc::on_timeCalcButton_clicked()
{
  QTime baseQTime = ui.baseTimeEdit->time();
  Time result = Time(baseQTime.hour(), baseQTime.minute(), baseQTime.second());

  QTime offsetQTime = ui.offsetTimeEdit->time();
  Time offset = Time(offsetQTime.hour(), offsetQTime.minute(), offsetQTime.second());

  switch (timeOp) {
  case Add:
    result = result + offset;
    break;

  case Subtract:
    result = result - offset;
    break;

  default:
    printf("ERROR: Invalid time operation.\n");
    break;
  }

  timeResult = QTime(result.Hours(), result.Minutes(), result.Seconds(), 0);
  SetTimeResultText();
}

//******************************************************************************

void DateTimeCalc::on_dateCalcButton_clicked()
{
  QDate baseQDate = ui.baseDateEdit->date();
  zDate result = zDate((zDate::month)baseQDate.month(), baseQDate.day(), baseQDate.year());

  QString daysText = ui.daysEdit->text();
  QString weeksText = ui.weeksEdit->text();
  QString yearsText = ui.yearsEdit->text();

  bool ok = true;
  int days = daysText.toInt(&ok);
  if (!ok) {
    printf("ERROR: Invalid number for days.\n");
  }
  int weeks = weeksText.toInt(&ok);
  if (!ok) {
    printf("ERROR: Invalid number for weeks.\n");
  }
  int years = yearsText.toInt(&ok);
  if (!ok) {
    printf("ERROR: Invalid number for years.\n");
  }

  switch (dateOp) {
  case Add:
    result = result + days;
    result = result.AddWeeks(weeks);
    result = result.AddYears(years);
    break;

  case Subtract:
    result = result - days;
    result = result.AddWeeks(-weeks);
    result = result.AddYears(-years);
    break;

  default:
    printf("ERROR: Invalid date operation.\n");
    break;
  }

  //cout << (int) result.Month() << "/" << result.Day() << "/" << result.Year() << endl;

  QDate dateResult = QDate(result.Year(), result.Month(), result.Day());
  ui.resultDateEdit->setDate(dateResult);
}

//******************************************************************************

void DateTimeCalc::on_dateDiffCalcButton_clicked()
{
  QDate baseQDate = ui.baseDateDiffEdit->date();
  zDate baseDate = zDate((zDate::month)baseQDate.month(), baseQDate.day(), baseQDate.year());

  QDate targetQDate = ui.targetDateDiffEdit->date();
  zDate targetDate = zDate((zDate::month)targetQDate.month(), targetQDate.day(), targetQDate.year());

  // Calculate difference in dates
  long result = baseDate - targetDate;

  QString resultText = QString("%1").arg(result) + " days\n";

  int y = result / 365;
  int ld = y / 4;
  int d = result - (y * 365) - ld;
  int wks = d / 7;
  int remDays = d % 7;
  resultText += QString("%1").arg(y) + " years, "
              + QString("%1").arg(wks) + " weeks, "
              + QString("%1").arg(remDays) + " days";

  ui.dateDiffResultEdit->setPlainText(resultText);
}

//******************************************************************************
